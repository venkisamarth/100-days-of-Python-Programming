# -*- coding: utf-8 -*-
"""Day10 Taking  User Input in python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18foL7bF3oqI1MoPA6PHhqueiqgiHdGZ4
"""

# using the input () funtion
# the input() funtion is the most comman way to get the input
user_input=input("Enter the something here ")
print("You entered:", user_input)
input()

# In python we can take user input using the input() funtion ,here are the some example of the  demsstrating  diffrent ways to take user  input in python

# Basic Input
user_inut=input("Enter Something:")
print("You enterd: ", user_input)

# Integer input :
try:
  user_input=int(input("Enter an integer:"))
  print("You enterd: ", user_input)
except ValueError:
  print("Invalid input. please enter an integer.")

#float input
try:
  user_input=float(input("Enter  a float: "))
  print("You enterd :", user_input)
except ValueError:
  print("Invalid input.please enter a float.")

#Multiple inputs:
name=input("Enter you name:")
age=int(input("Enter your age:"))
print("Name:", name,"age:", age)

#Taking the input in one line
name, age = input("Enter your name and age (comma-separated): ").split(',')
print("Name:", name, "Age:", age)

#password input (without enhoing):
from getpass import getpass

password = getpass("Enter your password: ")
print("Password entered.")

#using  list comprehension
numbers=[int(x) for x in input("Enter a listof numbers(space-separated): ").split()]
print("List of numbers:",numbers)

#using a function
def get_user_input(prompt):
  return input(prompt)
user_input = get_user_input("Enter something using a function: ")
print("You entered:", user_input)

file_path = input("Enter the path of the file: ")
with open(file_path, 'r') as file:
    file_contents = file.read()
    print("File Contents:", file_contents)

file_path=input("Enter the path of the file:")
with open(file_path, 'r') as file:
  file_contents=file.read()
  print("File Contentes:,file_contens")

#Using the command line Arguments
import sys

# Assuming the script is called script.py and you run it like: python script.py arg1 arg2
arg1 = sys.argv[1]
arg2 = sys.argv[2]
print("Command line arguments:", arg1, arg2)

