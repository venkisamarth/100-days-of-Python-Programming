# -*- coding: utf-8 -*-
"""day11 strings in python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_1V2flCx-rP7ZFJb0e1OARu3OsTxDsDG
"""

name="harry"
friends="Rohan"
anptherFriends="Lovish"
apple="""he said Hi Harry
hey I am a good Boy
I want to eat an apple"""
print("Hello, ",name)
print(apple)
print(name[0])
print(name[1])
print(name[2])
print(name[3])
print(name[4])

print("hello, "+ name)
for charencter in apple:
  print(charencter)

"""
In Python, a string is a sequence of characters enclosed in either single (' '), double (" "), or triple (''' 'or ''' ") quotes. Strings are immutable, meaning their values cannot be changed after creation. You can perform various operations on strings, including accessing individual characters and substrings.
"""

# indexing start from the 0 in python
my_string ="Hello, World!"
first_char=my_string[0]
third_char=my_string[2]
last_char=my_string[-1]

#slicing
# Slicing allows you to access a portion of the string by specifying a range of indices.
my_string="Hello, World!"
substring=my_string[7:12]
print(substring)

# Negative indexing
# string supports the negitive indexing
my_string = "Hello, World!"
last_char = my_string[-1]
last_second_element=my_string[-2]
print(my_string)
print(last_second_element)

#String Methods:
# Python Provieds various string methods for manipulating and accessing string for 'example'
my_string="Hello, world!"
lenght=len(my_string)
uppercase=my_string.upper()
lowercase=my_string.lower()
print(lenght)
print(uppercase)
print(lowercase)

#string concatination:
str1="Hello"
str2="World"
concatenated_str=str1+" ,"+str2
print(concatenated_str)

"""**string methods**"""

# len(str)
# returns the length of the string
my_string="Hello, World!"
lenght=len(my_string)
print(lenght)

#str.capitalize()'
#Returns a copy of the string with its first character capitalized
my_string="hello,world!"
capitalized=my_string.capitalize()
print(capitalized)

#str.upper() and str.lower()
# Returns a new string with all characters in uppercase or lowercase
# respectively
my_string="Hello, World!"
uppercase=my_string.upper()
lowercase=my_string.lower()
print(uppercase)
print(lowercase)

# str.title()
# Returns  a titlecase version of the string where words start with
# an uppercase character an the remaing characters are lowercase
my_string="Hello, world!"
titlecased=my_string.title()
print(titlecased)

# str.isalpha(),str.isdigit() and str.isalnum
# return True if all characters in the string are alphabetic, numeric of alphanumeric , respectively.
alpha_check = "abc".isalpha()
digit_check="123"
alnum_check="abc123".isalnum()
print(alpha_check)
print(digit_check)
print(alnum_check)

# str.stratwith(prifix) and str.endwith(suffix)
# Returns True if the string starts or end with the specified prifix or suffix, respectivly
my_string="Hello,World"
starts_with_hello=my_string.startswith("Hello")
ends_with_world=my_string.endswith("World!")
print(starts_with_hello)
print(ends_with_world)

#str.strip()" " str.lstrip(), and str.rstrip
# Retruns a copy of the string with leading ,trailing, or both leadig and trailing whitespace removed
my_string=my_string.strip()
left_stripped=my_string.lstrip()
right_stripped=my_string.rstrip()
print(right_stripped)
print(right_stripped)

# Returns a new string with all occurrences of the old substring replaced by the new substring.
my_string ="Hello, world!"
new_string=my_string.replace("Hello","Hi")
print(new_string)

#str.split(sep)
#Split the string into a list of substring based in the specificaton
my_string ="Hellp,World!"
word =my_string.split(" ,")
print(word)

#str.find(sub) and str,rfind(sub)
#Returns the lowest and highest indices of the substring respectively returns-1the sustring is not found
my_string='my_string'
index1=my_string.find("world")
index2 = my_string.rfind("o")
print(index2)

print(index1)

