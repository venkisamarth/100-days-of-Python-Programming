# -*- coding: utf-8 -*-
"""Day12 String  slicing   and Operations on string in python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/198IGuaG45RlFZ2XMWZIIYkj143B6DEDC

Basic Slicing:
"""

# Extract a Substring:
my_string="Hello,World!"
substring=my_string[7:12]
print(substring)

# Using  negative indeces
my_string="Hello,World"
sub_string=my_string[-6:-1]
sub_string

#Ommiting start or stop:
my_string="Hello, world!"
substring1 = my_string[:5]
substring2 = my_string[7:]
print(substring1)
print(substring2)

"""String with steps:"""

#Every with steps:
my_string="Hello, World!"
result=my_string[::2]
print(result)

# REversing the string
my_string="Hello, world!"
reserved_str=my_string[::-1]

print(reserved_str)

"""Example with step and range"""

#part Reversal:
my_string =" Hello, World!"
result = my_string[6::-1]
print(result)

#skippig  Characters:
my_string="Hello,World!"
result=my_string[1:11:2]

print(result)

# using the variables:
# variabl start and stop:
my_string="Hello, World!"
start_index=7
stop_index=12
result=my_string[start_index:stop_index]
print(result)

#variable step:
my_string="Hello, world!"
step_size=3
result=my_string[::step_size]
print(result)

#Slicing with Lenght Consideration
# 1 Slicing with lenght:
my_string="Hello, world!"
lenght=6
result=my_string[-lenght:]
print(result)

# Speciatl Cases:
# Empty Slice(BNo Cahracters):
my_string = "Hello,world!"
result=my_string[10:10]
print(result)

# Entire String:
my_string = "Hello, world!"
result=my_string[:]
print(result)

# chaing the other Character:
my_string ="Hello, World"
modified_str=my_string[::2].lower()
print(modified_str)

# step and reserve:
my_string="Hello, World!"
result=my_string[::-2]
print(result)

"""These examples cover various scenarios of string slicing, including positive and negative indices, steps, using variables, and special cases. Slicing is a versatile tool in Python for working with strings and other iterable data types.

Operations on the string
"""

# concatenation:
#Concatenation involves combining two or more strings into a single string
str1="hello"
str2="World"
result=str1+" ,"+str2
print(result)

#REpetition:
str1="Hello"
str2="world!"
result=str1+", "+str2
print(result)

my_string="Hello,  world!"
lenght=len(my_string)
print(lenght)

# Accessing characters:
# Accessing the individual Cahracter in a string using indexing.
my_string="Hello, World!"
first_char=my_string[0]
print(first_char)

#Slicing  substring form a string  using slicing.
my_string="Hello, World!"
substring=my_string[7:12]
print(my_string)

# Conversion:
# Converting the case  Characters in a strin.
my_string="Hello, Wold!"
contains_hello="Hello" in my_string
print(contains_hello)

# String Foramating:
# Formating String using diffrent methods.
name = "Alice"
age = 30
formatted_str = f"My name is {name} and I am {age} years old."
# "My name is Alice and I am 30 years old."

"""Replacing Substrings:
Replacing occurrences of a substring with another substring.
"""

my_string = "Hello, World!"
new_string = my_string.replace("Hello", "Hi")  # "Hi, World!"