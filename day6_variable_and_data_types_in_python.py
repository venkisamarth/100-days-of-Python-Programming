# -*- coding: utf-8 -*-
"""Day6 Variable and Data Types in Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rXtFIPyCud8O9iH0HJYL2qOrAI1ZVPwb

Variable

The naming rules for Python variables are outlined in Python's PEP 8 style guide. Here are the key points:


1) Case-Sensitive:

Variable names are case-sensitive. myVariable and myvariable would be considered different variables.

2) Start with a Letter or Underscore:
Variable names must start with a letter (a-z, A-Z) or an underscore (_).

3) Followed by Letters, Numbers, or Underscores:
After the initial letter, variable names can include letters, numbers, or underscores.

4) Avoid Reserved Words:
Do not use reserved words of the Python language as variable names. Examples include if, else, while, for, class, etc.

5) No Spaces:
Varaible names canot contain the  space in between name

6) Convention:
Follow the convention of using lowercase letters for variable names with underscores to separate words (snake_case). This is the preferred style in PEP 8.

7) Descriptive and Meaningful:
Use descriptive and meaningful names for variables to enhance code readability.
"""

user_name="venki"
roll_num=23
my_name="venkatesh"
max_value=89
PersonName="john"
my_variable=24
print(my_variable)
print("this are the variable that satisfy the variabel rules")

"""**Data Types in python**

Python is a dynamically-typed language, meaning you don't need to explicitly declare the data type of a variable. However, Python has several built-in data types that variables can take. Here are some common data types in Python:

Integers ('int'):
"""

# Integers ('int'):
# whole numbers without a decimal point
age=12
number=23
my_age=21

"""Floats('floats'):"""

#numbers with a decimal point
height=1.72
print(height)

"""String('str'):"""

#sequence of charecters enclosed in a single or double quots.
my_name="venkatesh j Mariayappabnaver"
mother_name="choudamma"
father_name="jayappa m"
brother_name="sachin"



"""BOoleans('bool'):"""

#REpsresent tryth values "True" or 'False"
is_student=True

"""Tupe("list"):

"""

#Orderd,imputable sequence of elements.
coordinates=(3,4)

"""Dictionaries("dict'):

"""

# Undorrder Collections of keys-value pairs.
person = {'name': 'Alice', 'age': 30, 'is_student': False}

#sets
#REpsresents the absence of a value or a null value.
result=True

#co0mples number
complex_number=3+4j
print(complex_number)

"""These are some of the primary built-in data types in Python. Additionally, Python has a rich standard library that includes other specialized data types and structures for various purposes. The dynamic typing nature of Python allows variables to change types during runtime based on the assigned values."""

a= complex(8,2)
b=True
c="Harry"
d=None
print(a)
print(b)
a1=9
print("the type of a is:",type(a))
print("the type of  b is ", type(b))
print("the type of c is", type(c))
list1=[8,2.3,[-4,5],["apple","banana"]]
print(list1)
tuple1=(("parrot","sparrow"),("Lion","Tiger"))
print(tuple1)

dict1={"name":"Sakshi","age":23,"canVot":True}

