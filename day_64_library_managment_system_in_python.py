# -*- coding: utf-8 -*-
"""day 64 library managment system in python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-bBfUAxkHhNuFlkKYYxaXfqXzovVlh9c
"""

class Book:
    def __init__(self, title, author, ISBN, copies_available):
        self.title = title
        self.author = author
        self.ISBN = ISBN
        self.copies_available = copies_available

    def display_info(self):
        print(f"Title: {self.title}")
        print(f"Author: {self.author}")
        print(f"ISBN: {self.ISBN}")
        print(f"Copies available: {self.copies_available}")
        print("----------------------")


class Patron:
    def __init__(self, name, patron_id):
        self.name = name
        self.patron_id = patron_id

    def display_info(self):
        print(f"Patron Name: {self.name}")
        print(f"Patron ID: {self.patron_id}")
        print("----------------------")


class Library:
    def __init__(self):
        self.books = []
        self.patrons = []
        self.transactions = []

    def add_book(self, book):
        self.books.append(book)

    def add_patron(self, patron):
        self.patrons.append(patron)

    def display_books(self):
        print("Library Books:")
        for book in self.books:
            book.display_info()

    def display_patrons(self):
        print("Library Patrons:")
        for patron in self.patrons:
            patron.display_info()

    def borrow_book(self, patron, book):
        if book.copies_available > 0:
            book.copies_available -= 1
            transaction = {'patron': patron.name, 'book': book.title, 'action': 'Borrowed'}
            self.transactions.append(transaction)
            print(f"{patron.name} borrowed {book.title}.")
        else:
            print(f"Sorry, no copies of {book.title} available.")

    def return_book(self, patron, book):
        book.copies_available += 1
        transaction = {'patron': patron.name, 'book': book.title, 'action': 'Returned'}
        self.transactions.append(transaction)
        print(f"{patron.name} returned {book.title}.")

    def display_transactions(self):
        print("Library Transactions:")
        for transaction in self.transactions:
            print(f"{transaction['patron']} {transaction['action']} {transaction['book']}")
        print("----------------------")


def main():
    library = Library()

    book1 = Book("The Great Gatsby", "F. Scott Fitzgerald", "978-3-16-148410-0", 5)
    book2 = Book("To Kill a Mockingbird", "Harper Lee", "978-0-06-112008-4", 3)

    patron1 = Patron("John Doe", "P001")
    patron2 = Patron("Jane Smith", "P002")

    library.add_book(book1)
    library.add_book(book2)
    library.add_patron(patron1)
    library.add_patron(patron2)

    library.display_books()
    library.display_patrons()

    library.borrow_book(patron1, book1)
    library.borrow_book(patron2, book2)

    library.return_book(patron1, book1)

    library.display_transactions()


if __name__ == "__main__":
    main()

